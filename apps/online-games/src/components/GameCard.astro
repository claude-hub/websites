---
export interface Props {
	id: string;
	title: string;
	description: string;
	thumb: string;
	category: string;
}

const { id, title, description, thumb, category } = Astro.props;

const truncateDescription = (text: string, maxLength: number = 100) => {
	if (text.length <= maxLength) return text;
	return text.slice(0, maxLength) + '...';
};
---

<div class="game-card h-full flex flex-col">
	<div class="relative overflow-hidden">
		<img
			src={thumb}
			alt={title}
			class="w-full aspect-[2/1] object-cover"
			loading="lazy"
			width="300"
			height="169"
		/>
		<div
			class="absolute inset-0 bg-gradient-to-t from-black/80 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end"
		>
		</div>
		<span class="absolute top-2 right-2 bg-game-primary text-white text-xs px-2 py-1 rounded-full">
			{category}
		</span>
		<a
			href={`/game/${id}`}
			class="absolute inset-0 flex items-center justify-center opacity-0 hover:opacity-100 transition-opacity duration-300 bg-black/50"
		>
			<span class="btn btn-primary text-sm">
				<i class="fas fa-play mr-2"></i> Play Now
			</span>
		</a>
	</div>

	<div class="p-4 flex flex-col flex-grow">
		<h3 class="font-bold text-lg mb-2 line-clamp-1">{title}</h3>
		<p class="text-gray-400 text-sm line-clamp-2">
			{truncateDescription(description, 80)}
		</p>
	</div>
</div>
